class Node:
    def __init__(self, val, next = None):
        self.val = val
        self.next = next

    def __str__(self):
        return str(self.val)
    

head = Node(input("Enter head: "))
Val1 = Node(input("Enter val1: "))
Val2 = Node(input("Enter val2: "))
Val3 = Node(input("Enter val3: "))

curr = head
head.next = Val1
Val1.next = Val2
Val2.next = Val3


# Displaying the linked list
def Display(head):
    curr = head
    ele = []
    while curr:
        ele.append(str(curr.val))
        curr = curr.next

    print(" -> ".join(ele))

Display(head)

# Inserting the linked list at the front
def inserting_at_begining(head, val):
    new_node = Node(val, next = head)
    head.prev = new_node
    return new_node

head = inserting_at_begining(head, val=0)
print("Before deletion: ")
Display(head)

# Deleting the linked list
def delete(head):
    temp = head
    head = head.next
    del temp
    return head

head = delete(head)
print('After deletion of the head: ')
Display(head)


# Reversing the linked list
def reversed(head):
    prev = None
    curr = head
    
    while curr:
        NewNode = curr.next
        curr.next = prev
        prev = curr
        curr = NewNode

    return prev

head = reversed(head)
print("After reversing the list: ")
Display(head)

